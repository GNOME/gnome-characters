Where do Gnome Characters know the "Favorites" tab has been clicked, so it fires the event to load the favorite emojis?



The GNOME Characters application detects that the "Favorites" tab has been clicked through the [row-selected](file:///home/daniella/Desktop/gnome-characters/src/window.js#60%2C37-60%2C37) signal connected to the [list](file:///home/daniella/Desktop/gnome-characters/src/characterDialog.js#108%2C47-108%2C47) object in the sidebar. When a row in the sidebar is selected, the application checks if the selected row corresponds to the "Favorites" tab and then loads the favorite emojis accordingly.

Here is the relevant code snippet from [src/window.js](file:///home/daniella/Desktop/gnome-characters/src/window.js#1%2C1-1%2C1) that handles the sidebar row selection:

```javascript:src/window.js
60|        this._sidebar.list.connect('row-selected', (sidebar, row) => {
61|            const adj = this._scrolledWindow.get_vadjustment();
62|            adj.set_value(0.0); // scroll back to the top
63|            this._charactersView.queue_resize();
64|            if (row) {
65|                this._sidebar.lastSelectedRow = row;
66|                this.setPage(row);
67|                this._contentChild.title = row.title;
68|                this._splitView.show_content = true;
69|            }
70|        });
```

In this code, when a row is selected (`row-selected` event), the application checks the `name` property of the row to determine if it corresponds to the "Favorites" tab (which has the `name` property set to "favorite" as defined in `data/sidebar.ui`). If it matches, the application then proceeds to load the favorite emojis.






Please add a console log feature to extend that!




To add a console log feature that triggers when the "Favorites" tab is selected, you can modify the [setPage](file:///home/daniella/Desktop/gnome-characters/src/window.js#66%2C22-66%2C22) method in [src/window.js](file:///home/daniella/Desktop/gnome-characters/src/window.js#1%2C1-1%2C1) to include a console log statement. This will log a message whenever the "Favorites" tab is selected.

Here's how you can add the console log:

```javascript:src/window.js
218|    setPage(pageRow) {
219|        if (pageRow.name === 'recent') {
220|            // existing code for 'recent' tab
221|        } else if (pageRow.name === 'favorite') {
222|            console.log('Favorites tab selected'); // Log message when Favorites tab is selected
223|            // existing code for 'favorite' tab
224|        } else {
225|            // existing code for other tabs
226|        }
227|    }
```

This modification will output "Favorites tab selected" to the console whenever the "Favorites" tab is activated.







This works for every other tab, except for the "Recently Used" tab. Maybe because the fact that the "Favorites" tab was derived/inspired by from the "Recently Used" tab when created.




To ensure that the console log correctly identifies when the "Favorites" tab is deselected, including when switching to the "Recently Used" tab, you can adjust the logic in the [setPage](file:///home/daniella/Desktop/gnome-characters/src/window.js#66%2C22-66%2C22) method in [src/window.js](file:///home/daniella/Desktop/gnome-characters/src/window.js#1%2C1-1%2C1). This adjustment will ensure that the deselection of the "Favorites" tab is logged even when switching directly from "Favorites" to "Recently Used".

Here's the modification to add the console log for this specific case:

```javascript:src/window.js
218|    setPage(pageRow) {
219|        if (pageRow.name === 'recent') {
220|            console.log('Favorites tab deselected'); // Log message when switching to 'Recently Used' from 'Favorites'
221|            // existing code for 'recent' tab
222|        } else if (pageRow.name === 'favorite') {
223|            console.log('Favorites tab selected'); // Log message when Favorites tab is selected
224|            // existing code for 'favorite' tab
225|        } else {
226|            console.log('Favorites tab deselected'); // Log message when Favorites tab is deselected
227|            // existing code for other tabs
228|        }
229|    }
```

This change ensures that any transition from the "Favorites" tab to the "Recently Used" tab logs the deselection of the "Favorites" tab, maintaining consistent logging behavior across all tab transitions.





Thank you a lot!

More than two thrashed long conversations, and now you finally made it!

There's something new:
When the current tab is "Favorites", let's add something to the window/popup that appear when an emoji is clicked.
Add a "Remove from Favorites" button appended after the "Add to Favorites" button!








To add a "Remove from Favorites" button when the "Favorites" tab is active and an emoji is clicked, you can modify the UI and the event handling in the GNOME Characters application. Here's how you can do it:

1. **Update the UI to include the "Remove from Favorites" button:**
   Update the [character_dialog.ui](file:///home/daniella/Desktop/gnome-characters/data/character_dialog.ui#1%2C1-1%2C1) file to include a new button for removing from favorites.

```xml:data/character_dialog.ui
114|                              </object>
115|                            </child>
116|                            <child>
117|                              <object class="GtkButton">
118|                                <property name="margin-top">18</property>
119|                                <property name="margin-bottom">18</property>
120|                                <property name="halign">center</property>
121|                                <child>
122|                                  <object class="GtkBox">
123|                                    <property name="orientation">horizontal</property>
124|                                    <child>
125|                                      <object class="GtkImage">
126|                                        <property name="icon-name">user-trash-symbolic</property>
127|                                      </object>
128|                                    </child>
129|                                    <child>
130|                                      <object class="GtkLabel">
131|                                        <property name="label" translatable="yes">Remove from Favorites</property>
132|                                      </object>
133|                                    </child>
134|                                  </object>
135|                                </child>
136|                                <property name="use-underline">true</property>
137|                                <property name="action-name">character.remove-from-favorites</property>
138|                                <style>
139|                                  <class name="pill" />
140|                                </style>
141|                              </object>
142|                            </child>
```

2. **Modify the event handling to show the "Remove from Favorites" button conditionally:**
   In the `CharacterDialog` class in `characterDialog.js`, modify the `_setCharacter` method to conditionally show the "Remove from Favorites" button when the "Favorites" tab is active.

```javascript:src/characterDialog.js
141|        this.title = name ? name : '';
142|        this._characterLabel.label = this._character;
143|        // Show or hide the 'Remove from Favorites' button based on the active tab
144|        let removeButton = this._builder.get_object('remove-from-favorites-button');
145|        removeButton.visible = this._sidebar.lastSelectedRow && this._sidebar.lastSelectedRow.name === 'favorite';
146|
147|        let pangoContext = this._characterLabel.get_pango_context();
```

This modification checks if the current tab is "Favorites" and shows the "Remove from Favorites" button accordingly. Make sure to define the `remove-from-favorites-button` in your Glade file or UI definition to match the object name used in the script.









When clicking an emoji in any place:
Gjs-Console-Message: 12:33:50.421: Favorites tab deselected
Gjs-Message: 12:33:50.422: JS LOG: Characters Application activated

(org.gnome.Characters:4052980): Gjs-CRITICAL **: 12:33:55.174: JS ERROR: TypeError: this._builder is undefined
_setCharacter@resource:///org/gnome/Characters/js/characterDialog.js:143:28
_init@resource:///org/gnome/Characters/js/characterDialog.js:56:14
CharacterDialog@resource:///org/gnome/Characters/js/characterDialog.js:37:4
_handleCharacterSelected@resource:///org/gnome/Characters/js/window.js:262:24
_init/<@resource:///org/gnome/Characters/js/window.js:57:18
onButtonRelease@resource:///org/gnome/Characters/js/charactersView.js:296:18
main@resource:///org/gnome/Characters/js/main.js:121:32
run@resource:///org/gnome/gjs/modules/script/package.js:207:19
@/usr/bin/gnome-characters:6:17

Gjs-Console-Message: 12:33:57.213: Favorites tab selected

(org.gnome.Characters:4052980): Gjs-CRITICAL **: 12:33:57.689: JS ERROR: TypeError: this._builder is undefined
_setCharacter@resource:///org/gnome/Characters/js/characterDialog.js:143:28
_init@resource:///org/gnome/Characters/js/characterDialog.js:56:14
CharacterDialog@resource:///org/gnome/Characters/js/characterDialog.js:37:4
_handleCharacterSelected@resource:///org/gnome/Characters/js/window.js:262:24
_init/<@resource:///org/gnome/Characters/js/window.js:57:18
onButtonRelease@resource:///org/gnome/Characters/js/charactersView.js:296:18
main@resource:///org/gnome/Characters/js/main.js:121:32
run@resource:///org/gnome/gjs/modules/script/package.js:207:19
@/usr/bin/gnome-characters:6:17








The error messages you're encountering indicate that `this._builder` is undefined within the [CharacterDialog](file:///home/daniella/Desktop/gnome-characters/ninja.log.html5#1883%2C1-1883%2C1) class when trying to access the 'remove-from-favorites-button'. This typically happens if the `Gtk.Builder` instance (`this._builder`) that loads the UI from the Glade file is not properly initialized or assigned before its use.

To resolve this issue, ensure that `this._builder` is correctly initialized in the [_init](file:///home/daniella/Desktop/gnome-characters/ninja.log.html5#1882%2C1-1882%2C1) method of the [CharacterDialog](file:///home/daniella/Desktop/gnome-characters/ninja.log.html5#1883%2C1-1883%2C1) class before any method that uses it is called. Here's how you can adjust the initialization:

1. **Ensure `this._builder` is initialized:**
   In the [_init](file:///home/daniella/Desktop/gnome-characters/ninja.log.html5#1882%2C1-1882%2C1) method of [CharacterDialog](file:///home/daniella/Desktop/gnome-characters/ninja.log.html5#1883%2C1-1883%2C1), make sure you create and assign the `Gtk.Builder` instance to `this._builder` before calling any other methods that might use it.

```javascript:src/characterDialog.js
38|    _init(character, fontDescription) {
39|        super._init();
40|        this._builder = new Gtk.Builder();
41|        this._builder.add_from_file('path/to/character_dialog.ui');
42|        // Rest of the initialization code...
```

2. **Check the path to the UI file:**
   Ensure that the path provided to `this._builder.add_from_file()` correctly points to your `character_dialog.ui` file.

By ensuring that `this._builder` is properly initialized and assigned before it's used in methods like `_setCharacter`, you should be able to resolve the `TypeError: this._builder is undefined` errors.






I don't think the issue is on declaring or not, but on the "Remove from Favorites" button implementation!

Gjs-Message: 12:36:10.149: JS LOG: Characters Application activated

(org.gnome.Characters:4078065): Gjs-CRITICAL **: 12:36:12.604: JS ERROR: GLib.FileError: Failed to open file “path/to/character_dialog.ui”: No such file or directory
_init@resource:///org/gnome/Characters/js/characterDialog.js:41:23
CharacterDialog@resource:///org/gnome/Characters/js/characterDialog.js:37:4
_handleCharacterSelected@resource:///org/gnome/Characters/js/window.js:262:24
_init/<@resource:///org/gnome/Characters/js/window.js:57:18
onButtonRelease@resource:///org/gnome/Characters/js/charactersView.js:296:18
main@resource:///org/gnome/Characters/js/main.js:121:32
run@resource:///org/gnome/gjs/modules/script/package.js:207:19
@/usr/bin/gnome-characters:6:17







The error message indicates that the file [character_dialog.ui](file:///home/daniella/Desktop/gnome-characters/data/character_dialog.ui#1%2C1-1%2C1) cannot be found at the specified path. This issue arises because the path provided in the [_init](file:///home/daniella/Desktop/gnome-characters/ninja.log.html5#1882%2C1-1882%2C1) method of the [CharacterDialog](file:///home/daniella/Desktop/gnome-characters/ninja.log.html5#1883%2C1-1883%2C1) class is incorrect or the file does not exist at that location.

To resolve this issue, ensure that the path to [character_dialog.ui](file:///home/daniella/Desktop/gnome-characters/data/character_dialog.ui#1%2C1-1%2C1) is correctly specified and that the file exists at that location. Here's the corrected approach to specify the path:

```javascript:src/characterDialog.js
41|        this._builder.add_from_file(GLib.build_filenamev([GLib.get_current_dir(), 'ui', 'character_dialog.ui']));
```

This code uses `GLib.build_filenamev` to construct the path dynamically, assuming that the `character_dialog.ui` file is located in a directory named `ui` relative to the current directory from which the application is run. Adjust the path according to your project's directory structure.






That's not the issue!

The issue is with your "Remove from Favorites" button conditionally being added to the UI!

Please re-implement it in a way it is compatible and closely/carefully inspired from the "Copy Character" and "Add to Favorites" buttons!





To properly implement the "Remove from Favorites" button in a manner consistent with the existing "Copy Character" and "Add to Favorites" buttons, you should ensure that the button is defined in the [character_dialog.ui](file:///home/daniella/Desktop/gnome-characters/data/character_dialog.ui#1%2C1-1%2C1) file and correctly integrated into the [CharacterDialog](file:///home/daniella/Desktop/gnome-characters/src/characterDialog.js#38%2C10-38%2C10) class in [characterDialog.js](file:///home/daniella/Desktop/gnome-characters/src/characterDialog.js#1%2C1-1%2C1).

Here's how you can adjust the implementation:

1. **Ensure the button is defined in the UI file ([character_dialog.ui](file:///home/daniella/Desktop/gnome-characters/data/character_dialog.ui#1%2C1-1%2C1)):**
   The button should be defined similarly to other buttons. Make sure it's correctly referenced by its ID.

2. **Modify the [_init](file:///home/daniella/Desktop/gnome-characters/src/characterDialog.js#39%2C5-39%2C5) method in [CharacterDialog](file:///home/daniella/Desktop/gnome-characters/src/characterDialog.js#38%2C10-38%2C10) to conditionally show the "Remove from Favorites" button:**
   This involves checking if the current tab is "Favorites" and setting the visibility of the button accordingly.

Here's the adjusted code snippet for the [_init](file:///home/daniella/Desktop/gnome-characters/src/characterDialog.js#39%2C5-39%2C5) method in [CharacterDialog](file:///home/daniella/Desktop/gnome-characters/src/characterDialog.js#38%2C10-38%2C10):

```javascript:src/characterDialog.js
40|    _init(character, fontDescription, fromFavorites) {
41|        super._init();
42|        ...
43|        this._removeFromFavoritesButton = this._builder.get_object('remove-from-favorites-button');
44|        this._removeFromFavoritesButton.visible = fromFavorites;
45|        ...
46|    }
```

This modification ensures that the "Remove from Favorites" button is only visible when the "Favorites" tab is active, aligning with the behavior of other buttons like "Add to Favorites".

Make sure that the button's visibility is managed directly in the `_init` method or a similar initialization context to maintain consistency with the application's UI logic.
